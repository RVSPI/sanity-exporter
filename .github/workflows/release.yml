name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller chardet colorama
          
      - name: Build Windows executable
        run: |
          pyinstaller --onefile --name sanity-exporter.exe --console sanity-exporter.py
          
      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: sanity-exporter-windows
          path: dist/sanity-exporter.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          pip install pyinstaller chardet colorama
          
      - name: Build Linux executable
        run: |
          pyinstaller --onefile --name sanity-exporter --console sanity-exporter.py
          
      - name: Upload Linux executable
        uses: actions/upload-artifact@v4
        with:
          name: sanity-exporter-linux
          path: dist/sanity-exporter

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          pip install pyinstaller chardet colorama
          
      - name: Build macOS executable
        run: |
          pyinstaller --onefile --name sanity-exporter --console sanity-exporter.py
          
      - name: Upload macOS executable
        uses: actions/upload-artifact@v4
        with:
          name: sanity-exporter-macos
          path: dist/sanity-exporter

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux, build-macos]
    permissions:
      contents: write
      
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Prepare release assets
        run: |
          mv artifacts/sanity-exporter-windows/sanity-exporter.exe sanity-exporter-windows.exe
          mv artifacts/sanity-exporter-linux/sanity-exporter sanity-exporter-linux
          mv artifacts/sanity-exporter-macos/sanity-exporter sanity-exporter-macos
          chmod +x sanity-exporter-linux sanity-exporter-macos
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Release ${{ github.ref_name }}"
          body: |
            Automated build for Sanity Exporter ${{ github.ref_name }}
            - Windows: `sanity-exporter-windows.exe`
            - Linux: `sanity-exporter-linux`
            - macOS: `sanity-exporter-macos`
          draft: false
          prerelease: false
          
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sanity-exporter-windows.exe
          asset_name: sanity-exporter-windows.exe
          asset_content_type: application/octet-stream
          
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sanity-exporter-linux
          asset_name: sanity-exporter-linux
          asset_content_type: application/octet-stream
          
      - name: Upload macOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./sanity-exporter-macos
          asset_name: sanity-exporter-macos
          asset_content_type: application/octet-stream